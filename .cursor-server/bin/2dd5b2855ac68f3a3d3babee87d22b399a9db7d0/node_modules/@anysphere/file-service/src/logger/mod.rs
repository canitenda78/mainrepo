use tracing::{info, subscriber, Level};
use tracing_appender::non_blocking::WorkerGuard;
use tracing_appender::rolling::{RollingFileAppender, Rotation};
use tracing_subscriber::fmt;
use tracing_subscriber::prelude::*;

pub enum GuardType {
  #[cfg(all(not(feature = "debugfile"), not(target_os = "linux")))]
  Guard(tracing_axiom::Guard),
  WorkerGuard(tracing_appender::non_blocking::WorkerGuard),
}

pub fn init_logger() -> Option<GuardType> {
  // #[cfg(feature = "debugfile")]
  // let _guard = {
  //   let file_appender =
  //     RollingFileAppender::new(Rotation::NEVER, "./", "rust_log.txt");
  //   let (non_blocking, _guard) = tracing_appender::non_blocking(file_appender);
  //   let subscriber = fmt::Subscriber::builder()
  //     .with_max_level(Level::TRACE)
  //     .with_writer(non_blocking)
  //     .with_ansi(false)
  //     .with_line_number(true)
  //     .finish();

  //   let _ = tracing::subscriber::set_global_default(subscriber);

  //   Some(GuardType::WorkerGuard(_guard))
  // };

  // #[cfg(all(not(feature = "debugfile"), not(target_os = "linux")))]
  // let _guard = {
  //   let (axiom_layer, _guard) = tracing_axiom::builder()
  //     .with_token("xaat-a51088e6-7889-41c0-b440-cfd4601acdd7")
  //     .with_dataset("local-indexing")
  //     .layer()
  //     .ok()?;
  //   // let fmt_layer = fmt::layer().with_level(true).with_ansi(false).with_line_number(true);

  //   let _ = tracing_subscriber::registry()
  //     .with(axiom_layer)
  //     .try_init()
  //     .ok()?;
  //   // let _ = tracing::subscriber::set_global_default(subscriber);

  //   info!("Tracing iNitialized! in rust");

  //   Some(GuardType::Guard(_guard))
  // };

  // #[cfg(all(not(feature = "debugfile"), target_os = "linux"))]
  let _guard = { None };

  _guard
}
